&.layout {

    .layout-information {
        .layout-name {

        }
        .layout-description {

        }
    }
    @include grid-settings( 16, 29px, 8px, 4 ) {
        .layout-grid-view {
            @include enable-font-feature-settings;
            margin: 0;
            @include container; // Set this element as the grid container
            margin-left: 0;
            margin-right: 0;

            :target & {
                @include susy-grid-background(); // Mixin to generate visual grid for testing
            }

            .layout-column {

                min-height: 110px;
                max-height: 110px;
                height: 110px;
                background-color: $gray-light;

                @for $i from 0 to length($widths) {
                    &.#{nth($widths, $i+1)} {
                        @if $i+1 == length($widths) {
                            @include span-columns( $i+1 omega, $total-columns );
                        } @else {
                            @include span-columns( $i+1, $total-columns );
                        }
                    }
                }
            }
            .layout-row {
                border: 1px solid $green;
            }
        }
    }
}